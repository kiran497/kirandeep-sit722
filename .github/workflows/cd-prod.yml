name: CD - Stage 3 (Production)

on:
  push:
    branches: [main]

env:
  REGISTRY:     ${{ secrets.ACR_LOGIN_SERVER }}         # kiranacr722.azurecr.io
  REPO_PREFIX:  ${{ vars.REPO_PREFIX || 'sit722' }}     # sit722

jobs:
  deploy-prod:
    runs-on: ubuntu-latest
    permissions: { id-token: write, contents: read }

    steps:
      - uses: actions/checkout@v4

      - name: Azure login
        uses: azure/login@v2
        with: { creds: ${{ secrets.AZURE_CREDENTIALS }} }

      - name: ACR login
        run: az acr login --name $(echo "${{ env.REGISTRY }}" | cut -d. -f1)   # -> kiranacr722

      - name: Build & push main-latest images
        run: |
          for path in backend/customer_service backend/product_service backend/order_service frontend; do
            svc=$(basename "$path")
            docker build -t "${{ env.REGISTRY }}/${{ env.REPO_PREFIX }}/$svc:main-latest" "$path"
            docker push    "${{ env.REGISTRY }}/${{ env.REPO_PREFIX }}/$svc:main-latest"
          done

      - name: Set AKS context
        uses: azure/aks-set-context@v4
        with:
          resource-group: ${{ vars.AKS_RESOURCE_GROUP }}   # rg-sit722-kiran
          cluster-name:  ${{ vars.AKS_CLUSTER_NAME }}      # kiranaks722

      - name: Ensure prod namespace
        run: |
          kubectl get ns "${{ vars.PROD_NAMESPACE }}" >/dev/null 2>&1 || kubectl create ns "${{ vars.PROD_NAMESPACE }}"

      - name: Apply manifests to prod
        working-directory: k8s
        run: kubectl -n "${{ vars.PROD_NAMESPACE }}" apply -f .

      - name: Pin images to main-latest
        run: |
          NS="${{ vars.PROD_NAMESPACE }}"                  # prod-sit722-kiran
          REG="${{ env.REGISTRY }}"
          PREF="${{ env.REPO_PREFIX }}"
          kubectl -n "$NS" set image deploy/product-service  product="${REG}/${PREF}/product_service:main-latest"   --record
          kubectl -n "$NS" set image deploy/order-service    order="${REG}/${PREF}/order_service:main-latest"       --record
          kubectl -n "$NS" set image deploy/customer-service customer="${REG}/${PREF}/customer_service:main-latest" --record
          kubectl -n "$NS" set image deploy/frontend         frontend="${REG}/${PREF}/frontend:main-latest"         --record

      - name: Wait for prod rollouts
        run: |
          NS="${{ vars.PROD_NAMESPACE }}"
          for d in product-service order-service customer-service frontend; do
            kubectl -n "$NS" rollout status deploy/$d --timeout=600s
          done
